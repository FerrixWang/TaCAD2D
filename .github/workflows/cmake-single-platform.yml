name: Tacad2D Windows Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  builddir: C:/Tacad2D/build/release/
  libpackdir: C:/Tacad2D/libpack/
  logdir: C:/logs/
  libpackdownloadurl: https://github.com/FreeCAD/FreeCAD-LibPack/releases/download/3.1.1.3/LibPack-1.1.0-v3.1.1.3-Release.7z
  libpackname: LibPack-1.1.0-v3.1.1.3-Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4.2.2
        with:
          submodules: true

      - name: 创建必要目录
        run: |
          New-Item -Path "${{ env.builddir }}" -ItemType Directory -Force
          New-Item -Path "${{ env.libpackdir }}" -ItemType Directory -Force
          New-Item -Path "${{ env.logdir }}" -ItemType Directory -Force
        shell: pwsh

      - name: 清理旧构建和依赖目录
        run: |
          if (Test-Path "${{ env.builddir }}") { Remove-Item -Path "${{ env.builddir }}" -Recurse -Force }
          if (Test-Path "${{ env.libpackdir }}") { Remove-Item -Path "${{ env.libpackdir }}" -Recurse -Force }
          New-Item -Path "${{ env.builddir }}" -ItemType Directory -Force
          New-Item -Path "${{ env.libpackdir }}" -ItemType Directory -Force
        shell: pwsh

      - name: 获取 libpack 缓存
        id: getCached
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.libpackdir }}
          key: libpackforwin-${{ env.libpackname }}

      - name: 下载 FreeCAD LibPack
        if: steps.getCached.outputs.cache-hit != 'true'
        run: |
          curl -L -o libpack.7z ${{ env.libpackdownloadurl }}
          7z x libpack.7z -o"libpacktemp" -r -y
          Move-Item -Path "libpacktemp/${{ env.libpackname }}/*" -Destination "${{ env.libpackdir }}"
          Remove-Item -Path "libpacktemp" -Recurse -Force
        shell: pwsh

      - name: 保存 libpack 到缓存
        if: steps.getCached.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.libpackdir }}
          key: ${{ steps.getCached.outputs.cache-primary-key }}

      - name: 安装 CMake
        uses: jwlawson/actions-setup-cmake@v2.0.2
        with:
          cmake-version: '3.31.6'

      - name: 设置 MSVC 环境
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: 配置 CMake
        run: |
          cmake -S . -B "${{ env.builddir }}" `
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
            -DCMAKE_PREFIX_PATH="${{ env.libpackdir }}" `
            -A x64
        shell: pwsh

      - name: 编译项目
        run: |
          Set-Location "${{ env.builddir }}"
          msbuild ALL_BUILD.vcxproj /m /p:Configuration=Release
        shell: pwsh

      - name: 运行测试
        working-directory: ${{ env.builddir }}
        run: |
          ctest --build-config ${{ env.BUILD_TYPE }} --output-on-failure
        shell: pwsh

      - name: 上传日志
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: tacad2d-logs
          path: ${{ env.logdir }}

      - name: 清理
        if: always()
        run: |
          if (Test-Path "${{ env.builddir }}") { Remove-Item -Path "${{ env.builddir }}" -Recurse -Force }
          if (Test-Path "${{ env.libpackdir }}") { Remove-Item -Path "${{ env.libpackdir }}" -Recurse -Force }
        shell: pwsh
