name: CMake on Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release
  PYTHON_VERSION: '3.12'  # 保持 Python 3.12 以确保 pyzstd 兼容性
  QT_VERSION: '6.7.2'     # 明确指定 Qt 版本
  QT_ARCH: 'win64_msvc2022_64'  # 指定架构，待验证

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: 检出代码库
      uses: actions/checkout@v4
      
    - name: 清理 Qt 安装目录
      run: |
        if exist "${{github.workspace}}\Qt" rmdir /s /q "${{github.workspace}}\Qt"
      shell: cmd
      continue-on-error: true
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.8.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        dir: '${{ github.workspace }}/example/'
        install-deps: 'true'
        modules: 'qtcharts qtwebengine'
        archives: 'qtbase qtsvg'
        cache: 'false'
        cache-key-prefix: 'install-qt-action'
        setup-python: 'true'
        tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
        set-env: 'true'
        tools-only: 'false'
        aqtversion: '==3.3.*'
        py7zrversion: '==1.0.*'
        extra: '--external 7z'
        use-official: false
        email: ${{ secrets.QT_EMAIL }}
        pw: ${{ secrets.QT_PW }}

    - name: 配置 CMake
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -A x64 -DCMAKE_PREFIX_PATH=${{github.workspace}}/Qt/${{env.QT_VERSION}}/${{env.QT_ARCH}}
      shell: cmd

    - name: 构建
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel
      shell: cmd

    - name: 测试
      working-directory: ${{github.workspace}}/build
      run: |
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure
      shell: cmd
